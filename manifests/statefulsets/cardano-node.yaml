apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: cardano-node
  namespace: cardano
spec:
  serviceName: cardano-node
  replicas: 1
  selector:
    matchLabels:
      app: cardano-node
  template:
    metadata:
      labels:
        app: cardano-node
    spec:
      initContainers:
      - name: mithril-client
        image: blinklabs/mithril-client:latest
        env: # change to load from configmap if needed
        - name: AGGREGATOR_ENDPOINT
          value: https://aggregator.release-mainnet.api.mithril.network/aggregator # try with release-preprod but error, see in sreenshoots folder
        - name: GENESIS_VERIFICATION_KEY
          value: 5b3139312c36362c3134302c3138352c3133382c31312c3233372c3230372c3235302c3134342c32372c322c3138382c33302c31322c38312c3135352c3230342c31302c3137392c37352c32332c3133382c3139362c3231372c352c31342c32302c35372c37392c33392c3137365d
        - name: SNAPSHOT_DIGEST
          value: latest
      
        # command:
        # - "echo"
        # - "exit"
        # - ">"
        # - "/dev/null"
        # - "tail"
        # - "-f"
        # - "/dev/null"

        # Restored from mithril for fast bootstrapping
        command: ["/bin/sh", "-c"]
        args:
        - |
          if [ -z "$(ls -A /data/db)" ]; then
            echo "Starting mithril-client download..."
            mithril-client -v \
              --aggregator-endpoint $AGGREGATOR_ENDPOINT \
              cardano-db download \
              --download-dir /data \
              --genesis-verification-key $GENESIS_VERIFICATION_KEY \
              $SNAPSHOT_DIGEST
          else
            echo "Data already exists in /data/db. Exiting..."
            exit 0
          fi

        volumeMounts:
        - name: node-data
          mountPath: /data
      containers:
      - name: cardano-node
        image: ghcr.io/intersectmbo/cardano-node:10.1.4
        # get from https://github.com/IntersectMBO/cardano-node/releases
        
        command:
        # - "tail"
        # - "-f"
        # - "/dev/null"

        command: ["/bin/sh", "-c"]
        args:
        - |
          cardano-node run \
              --config /config/testnet-config.json \
              --topology /config/testnet-topology.json \
              --host-addr 0.0.0.0 \
              --database-path /data/db \
              --socket-path /data/node.socket \
              --port 3001

        ports:
        - containerPort: 3001
        volumeMounts:
        - name: node-data
          mountPath: /data
        - name: config
          mountPath: /config
        resources:
          requests:
            cpu: "0.5"
            memory: "2Gi"
          limits:
            cpu: "1"
            memory: "4Gi"
      volumes:
      - name: config
        configMap:
          name: cardano-node-config
      - name: node-data
        persistentVolumeClaim:
          claimName: node-data-pvc