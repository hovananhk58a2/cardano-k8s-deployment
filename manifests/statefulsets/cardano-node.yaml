apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: cardano-node
  namespace: cardano
spec:
  serviceName: cardano-node
  replicas: 1
  selector:
    matchLabels:
      app: cardano-node
  template:
    metadata:
      labels:
        app: cardano-node
    spec:
      initContainers:
      - name: mithril-client
        image: blinklabs/mithril-client:latest
        env:
        - name: aggregator_endpoint
          value: https://aggregator.release-mainnet.api.mithril.network/aggregator
        command:
        - "tail"
        - "-f"
        - "/dev/null"
        # - sh
        # - -c
        # - |
        #   mithril-client cardano-db download --latest --net testnet-preprod -o /data/db.tar.gz
        #   tar -xzvf /data/db.tar.gz -C /data/

        # mithril-client -v --aggregator-endpoint https://aggregator.release-mainnet.api.mithril.network/aggregator cardano-db download latest

        volumeMounts:
        - name: node-data
          mountPath: /data
      containers:
      - name: cardano-node
        image: ghcr.io/intersectmbo/cardano-node:10.1.3
        # get from https://github.com/IntersectMBO/cardano-node/releases
        command:
        - "tail"
        - "-f"
        - "/dev/null"


        ports:
        - containerPort: 3001
        volumeMounts:
        - name: node-data
          mountPath: /data
        - name: config
          mountPath: /config
        resources:
          requests:
            cpu: "0.5"
            memory: "2Gi"
          limits:
            cpu: "1"
            memory: "4Gi"
      volumes:
      - name: config
        configMap:
          name: cardano-node-config
  volumeClaimTemplates:
  - metadata:
      name: node-data
    spec:
      accessModes: [ "ReadWriteMany" ]
      resources:
        requests:
          storage: 10Gi